{"version":3,"sources":["components/About.js","components/Portfolio.js","components/Contact.js","components/Navbar.js","components/LandingPage.js","components/Choreography.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","src","alt","Component","Portfolio","state","projects","title","description","url","image","this","map","project","i","href","key","Contact","Container_default","Row_default","Col_default","NavBar","styled","div","_templateObject","List","ul","_templateObject2","LandingPage","Choreography","class","App","components_LandingPage","components_About","components_Choreography","components_Portfolio","components_Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8PAsBeA,0LAjBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWC,IAAI,8BAA8BC,IAAI,sBAC/DL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,yaATAG,cCqDLC,6MArDXC,MAAQ,CACJC,SAAU,CAAC,CACPC,MAAO,WACPC,YAAa,0DACbC,IAAK,mDACLC,MAAO,IAEX,CACIH,MAAO,SACPC,YAAa,sGACbC,IAAK,8CAET,CACIF,MAAO,YACPC,YAAa,oHACbC,IAAK,kDAET,CACIF,MAAO,oBACPC,YAAa,0GACbC,IAAK,mIAKT,OACIZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,+BAIRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVW,KAAKN,MAAMC,SAASM,IAAI,SAACC,EAASC,GAC/B,OACIjB,EAAAC,EAAAC,cAAA,KAAGgB,KAAMF,EAAQJ,KACbZ,EAAAC,EAAAC,cAAA,OAAKiB,IAAKF,EAAGd,UAAU,cACnBH,EAAAC,EAAAC,cAAA,UAAKc,EAAQN,OACbV,EAAAC,EAAAC,cAAA,SAAIc,EAAQL,0BA3CxBL,+DCoBTc,mLAfP,OACIpB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,KACID,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,KACID,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,0BACAD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,qCACAD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,mCACAD,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,+BATFK,oYCFtB,IAAMkB,EAASC,IAAOC,IAAVC,KAKNC,EAAOH,IAAOI,GAAVC,KCYKC,GDFMzB,6LCbb,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,oBACIF,EAAAC,EAAAC,cAAA,WADJ,aAIAF,EAAAC,EAAAC,cAAA,4CAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,IAAI,wBAAwBC,IAAI,aAXjDC,cCiBX0B,mLAhBP,OACIhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,KAAGgB,KAAK,4DACJlB,EAAAC,EAAAC,cAAA,OAAK+B,MAAM,aAAX,yBATD3B,aC0BZ4B,mLAjBX,OACElC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAACoC,EAAD,MACAtC,EAAAC,EAAAC,cAACqC,EAAD,cARUjC,aCGEkC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.37e9cf28.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass About extends Component {\n    render() {\n        return (\n            <div className='bioBlock'>\n               <img className='headshot' src='images/AtariusArmstrong.jpg' alt=\"Atarius Armstrong\"/>\n                <div>\n                    <div>\n                        <h2>About Me</h2>\n                    </div>\n                    <div className='bio'>\n                    Iâ€™m Atarius Armstrong - a performing artist turned full stack web developer. I utilize tech as a form of creative medium in addition to my passion for musical theatre performance and choreography. I'm currently a candidate in the Equity Membership Candidate Program and currently work as a freelance dance instructor in the Metro Atlanta area specializing in musical theatre, jazz, contemporary, and modern.\n                    </div>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n    state = {\n        projects: [{\n            title: \"Jeopardy\",\n            description: \"A static HTML/CSS/JS replica of the game show jeopardy.\",\n            url: 'https://github.com/atariusarmstrong/unit1Project',\n            image: ''\n        },\n        {\n            title: \"Bartel\",\n            description: \"Fullstack application using Express & Node.js where users can log their favorite bars to day drink.\",\n            url: 'https://github.com/atariusarmstrong/bartel'\n        },\n        {\n            title: \"TripShare\",\n            description: \"Fullstack application utilizing Mongo, Express, React.js, and Node.js for users to log future group travel plans.\",\n            url: 'https://github.com/atariusarmstrong/trip-share'\n        },\n        {\n            title: 'REA Entertainment',\n            description: 'Fullstack application using React.js and Django for a mock website for a theatrical production company.',\n            url: 'https://github.com/atariusarmstrong/rea_entertainment'\n        }\n    ]\n    }\n    render() {\n        return (\n            <div>\n                <h2>Recent Projects</h2>\n                <div>\n                    <ul>\n                        <li>Full Stack Web Development</li>\n                        <li>User Interface Design</li>\n                        <li>Logo & Branding</li>\n                    </ul>\n                </div>\n                \n                <div className='projectContainer'>\n                    {this.state.projects.map((project, i) => {\n                        return (\n                            <a href={project.url}>\n                                <div key={i} className='projectBox'>\n                                    <h3>{project.title}</h3>\n                                    <p>{project.description}</p>\n                                </div>\n                            </a>\n                    )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Portfolio;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nclass Contact extends Component {\n    render() {\n        return (\n            <footer className='contactBox'>\n                <Container>\n                    <Row>\n                        <Col>Atarius Armstrong</Col>\n                        <Col>Full Stack, UI Web Developer</Col>\n                        <Col>atariusarmstrong@gmail.com</Col>\n                        <Col>404.603.6093</Col>\n                    </Row>\n                </Container>\n            </footer>\n        );\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport styled from 'styled-components'\n\nconst NavBar = styled.div`\n    width: 100vw;\n    height: 60px;\n    background-color: gold;\n`\nconst List = styled.ul`\n    list-style-type: none;\n    float: right;\n    li {\n        display: inline;\n        text-transform: uppercase;\n        padding: 10px;\n    }\n`\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <NavBar>\n                <List>\n                    <li>About Me</li>\n                    <li>Portfolio</li>\n                    <li>Contact</li>\n                </List>\n            </NavBar>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div className='landingPage'>\n                <div className=\"hero\">\n                    <h1>Atarius\n                        <br/>\n                        Armstrong\n                    </h1>\n                    <h3>performer. teacher. creative.</h3>\n                </div>\n                <img className='downArrow' src='images/icons/down.png' alt=''/>\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\n\nclass Choreography extends Component {\n    render() {\n        return (\n            <div className='choreographyBox'>\n                <div className='choreoInfo'>\n                    <h1>Choreography</h1>\n                    <div>\n                        <p>Info about choreography here</p>\n                        <a href='https://www.youtube.com/channel/UC8xNbEoYzayoDrhc1DALmrg'>\n                            <div class='divButton'>Watch More</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Choreography;","import React, { Component } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport Navbar from './components/Navbar';\nimport LandingPage from './components/LandingPage';\nimport Choreography from './components/Choreography';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <LandingPage />\n        <About />\n        <Choreography />\n        <Portfolio/>\n        <Contact />\n\n        {/* <Navbar />\n        \n        \n         */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}